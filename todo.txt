//в position нужно разработать определение, когда передается ивент, а когда coords, и что-бы можно было передавать coords
//сделать ajax аддоном, и поставлять отдельно(сделать систему аддонов)
//сделать функцию getImage size, как в modal плагине(может использовать create document fragment)
//проверить и описать ajaxHandler
//переделать timeout-ы на transitionEnd/animationEnd, просто определять наидлиннейший транзишен и на него биндить
//в hide, почему-то не закрывать пока state loading
//пофиксить глобальные функции last, hide
//adapters to prototype, ember - opentip


//в хелп
- если колбэк show или hide возвращает false, поповер не показывается/не скрывается
- coords и content могут быть функциями, они должны возвращать правильные данные
- поповер состоит из 2 элементов, внешнего data-njp-popover(.njp-popover) и внутреннего data-njp-inner(.njp-inner),
	если вдруг придется менять настройку o.template, обязательно должен быть хотя бы один элемент с data-njp-inner,
	в него вставляется контент
- все экземпляры(инстансы) поповера хранятся в njPopover.instances
- можно показать поповер в любом месте, не привязанный к какому либо элементу var popover = new njPopover({coords:'100 100',content:'Test popover'})
- iife mode, можно создать и сразу вызвать поповер - njPopover({coords:'100 100',content:'Test popover'})
	в таком режиме инстанс поповера сразу после скрытия удаляется из njPopover.instances

- вместе передачи каждой настройки по отдельности в дата аттрибуте, можно использовать формат json в data-njp-options, все остальные дата настройки для этого плагина будут проигнорированы
- расписать про o.imgs

-написать, список коллбэков, рассказать как их можно юзать
-статус loading можно проверить в this._o.loading
-autobind нет смысла указывать в опциях
-если любому элементу дать data-njp-close, он будет закрывающей кнопкой